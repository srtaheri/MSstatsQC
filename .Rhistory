prostate <- read.csv("/Users/sarataheri/Desktop/prostate/prostate.csv")
prostate_train <- prostate[prostate$train == TRUE,]
prostate_train <- prostate_train[,-1] # remove the first column from training set
prostate_train <- prostate_train[,-10] # remove the tenth column from training set
prostate_validation_set <- prostate[prostate$train == FALSE,]
prostate_validation_set <- prostate_validation_set[,-1] # remove the first column from validation set
prostate_validation_set <- prostate_validation_set[,-10] # remove the tenth column from validation set
prostate <- read.csv("/Users/sarataheri/Desktop/prostate/prostate.csv")
prostate_train <- prostate[prostate$train == TRUE,]
prostate_train <- prostate_train[,-1] # remove the first column from training set
prostate_train <- prostate_train[,-10] # remove the tenth column from training set
prostate_validation_set <- prostate[prostate$train == FALSE,]
prostate_validation_set <- prostate_validation_set[,-1] # remove the first column from validation set
prostate_validation_set <- prostate_validation_set[,-10] # remove the tenth column from validation set
lm_prostate_train <- lm(lpsa~.,data = prostate_train)
summary(lm_prostate_train)
qqnorm(lm_prostate_train$residuals, main = "Normal qqplot of residuals")
qqline(lm_prostate_train$residuals)
qqnorm(lm_prostate_train$residuals, main = "Normal qqplot of residuals")
regfit.full <- regsubsets(lpsa~., data = prostate_train)
library(leaps)
regfit.full <- regsubsets(lpsa~., data = prostate_train)
reg.summary <- summary(regfit.full)
reg.summary
par(mfrow = c(2,2))
plot(reg.summary$rss, xlab = "Number of variables", ylab = "Residual Sum of Squares (RSS)", type = "l")
plot(reg.summary$adjr2, xlab = "Number of variables", ylab = "Adjacent R square", type = "l")
plot(reg.summary$cp, xlab = "Number of variables", ylab = "CP", type = "l")
plot(reg.summary$bic, xlab = "Number of variables", ylab = "BIC", type = "l")
which.min(reg.summary$bic)
subset_select_2predictor <- lm(lpsa ~ lcavol + lweight, data = prostate_train)
coef(regfit.full, 2)
library(glmnet)
x <- model.matrix(lpsa~.,prostate_train)[,-1]
y <- prostate_train$lpsa
grid = 10^seq(10,-2, length = 100)
ridge.mode = glmnet(x, y, alpha=0, lambda = grid)
plot(ridge.mode, main = "Ridge regression",label = TRUE)
cv.out <- cv.glmnet(x,y, alpha = 0)
plot(cv.out)
bestlam.ridge = cv.out$lambda.min
bestlam.ridge
lasso.mod <- glmnet(x,y, alpha = 1, lambda = grid)
plot(lasso.mod, main = "Lasso regression", label = TRUE)
cv.out <- cv.glmnet(x,y,alpha = 1)
plot(cv.out)
bestlam.lasso <- cv.out$lambda.min
bestlam.lasso
lasso.mode <- glmnet(x, y, alpha=1, lambda = bestlam.lasso)
predict(lasso.mode, s = bestlam.lasso, type = "coefficients")[1:9,]
real_value_lpsa <- prostate_validation_set$lpsa
prostate_validation_set$lpsa <- NULL
newx <- data.matrix(prostate_validation_set)
all_variables_prediction <- predict(lm_prostate_train, newdata = prostate_validation_set)
all_subset_selection_prediction <- predict(subset_select_2predictor, newdata = prostate_validation_set)
lasso_prediction <- predict(lasso.mod, newx = newx)
ridge_prediction <- predict(ridge.mod, newx = newx)
ridge.mode <- glmnet(x, y, alpha=0, lambda = bestlam.ridge)
ridge_prediction <- predict(ridge.mod, newx = newx)
ridge_prediction <- predict(ridge.mode, newx = newx)
error_all_variables_prediction <- sum((all_variables_prediction - real_value_lpsa)^2)/nrow(prostate_validation_set)
error_all_variables_prediction
sqrt(0.521274)
error_all_subset_selection_prediction <- sum((all_subset_selection_prediction - real_value_lpsa)^2)/nrow(prostate_validation_set)
error_all_subset_selection_prediction
error_lasso_prediction <- sum((lasso_prediction - real_value_lpsa)^2)/nrow(prostate_validation_set)
error_lasso_prediction
error_ridge_prediction <- sum((ridge_prediction - real_value_lpsa)^2)/nrow(prostate_validation_set)
error_ridge_prediction
error_lasso_prediction <- sum((lasso_prediction - real_value_lpsa)^2)/nrow(prostate_validation_set)
error_lasso_prediction
sum((lasso_prediction - real_value_lpsa)^2)
sum((ridge_prediction - real_value_lpsa)^2)
lasso_prediction <- predict(lasso.mod, newx = newx)
lasso_prediction
ridge_prediction
lasso.mode <- glmnet(x, y, alpha=1, lambda = bestlam.lasso)
lasso.mode
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/Desktop/sample.csv")
MSstatsQC::DecisionMaker(data,method = "CUSUM")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/Desktop/sample.csv")
MSstatsQC::DecisionMaker(data,method = "CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/Desktop/sample.csv")
MSstatsQC::DecisionMaker(data,method = "CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/Desktop/sample.csv")
MSstatsQC::DecisionMaker(data,method = "CUSUM")
shiny::runApp('~/GitHub/msstats-qc')
View(data)
runApp('~/GitHub/msstats-qc')
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/Desktop/sample.csv")
MSstatsQC::DecisionMaker(data,method = "CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/Desktop/sample.csv")
MSstatsQC::DataProcess(data)
View(data)
View(data)
MSstatsQC::ChangePointEstimator(data,"TAAYVNAIEK",metric = "MaxFWHM")
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "MaxFWHM")
MSstatsQC::CUSUMSummaryPlots(data,1,5)
MSstatsQC::DecisionMaker(data,"CUSUM")
MSstatsQC::XmRPlots(data,peptide = "TAAYVNAIEK",metric = "MaxFWHM")
MSstatsQC::XmRSummaryPlots(data,1,5)
MSstatsQC::RunShiny()
library(MSstatsQC)
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
View(data)
View(data)
MSstatsQC::ChangePointEstimator(data,"TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::ChangePointEstimator(data,"TAAYVNAIEK",metric = "Best.RT",type = "dispersion")
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "Best.RT")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "Best.RT",type = "dispersion")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::ChangePointEstimator(data,"TAAYVNAIEK",metric = "Best.RT",type = "dispersion")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
View(data)
MSstatsQC::XmRPlots(data,"TAAYVNAIEK",metric = "Best.RT")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::XmRPlots(data,"TAAYVNAIEK",metric = "Best.RT")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::XmRPlots(data,"TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::ChangePointEstimator(data,"TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::CUSUMPlots(data,peptide = "TAAYVNAIEK",metric = "Best.RT")
library(MSstatsQC)
MSstatsQC::CUSUMPlots(data,peptide = "TAAYVNAIEK",metric = "Best.RT")
library(MSstatsQC)
library(MSstatsQC)
MSstatsQC::DecisionMaker(data,"Best.RT")
MSstatsQC::DecisionMaker(data,"CUSUM")
library(MSstatsQC)
MSstatsQC::DecisionMaker(data,"CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DecisionMaker(data,"CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DecisionMaker(data,"CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DecisionMaker(data,"XmR")
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DecisionMaker(data,method = "CUSUM")
library(MSstatsQC)
?DecisionMaker
library(MSstatsQC)
?DecisionMaker
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DecisionMaker(data,"CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DecisionMaker(data,"CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DecisionMaker(data,"CUSUM")
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DecisionMaker(data,"CUSUM")
library(MSstatsQC)
MSstatsQC::DecisionMaker(data,"CUSUM")
DataProcess
DataProcess(data)
data <- DataProcess(data)
head(data)
DecisionMaker(data,"CUSUM")
XmRSummaryPlots(data,1,5)
CUSUMSummaryPlots(data,1,5)
library(MSstatsQC)
library(MSstatsQC)
RunShiny()
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
MSstatsQC::DataProcess(data)
data <- DataProcess(data)
View(data)
View(data)
MSstatsQC::ChangePointEstimator(data,"TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::ChangePointEstimator(data,"TAAYVNAIEK",metric = "Best.RT",type = "dispersion")
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "Best.RT", type = "dispersion")
MSstatsQC::DecisionMaker(data, method = "CUSUM")
MSstatsQC::DecisionMaker(data, method = "XmR")
MSstatsQC::XmRSummaryPlots(data)
MSstatsQC::CUSUMSummaryPlots(data)
MSstatsQC::XmRPlots(data,"TAAYVNAIEK", metric = "Best.RT")
a <- NULL
b <- NULL
if(a == NULL && b == NULL) {print("HI")}
if(a == NULL & b == NULL) {print("HI")}
if(a = NULL && b = NULL) {print("HI")}
if(a = NULL) {print("HI")}
if(a == NULL) {print("HI")}
c <- 3
if
(c != NULL) {print("hi")}
if(is.null(a)){print("hi")}
if(is.null(a) && is.null(c)){print("hi")}
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/Dropbox/MSstatsQC/Data/Sampledata.csv")
data <- MSstatsQC::DataProcess(data)
View(data)
MSstatsQC::XmRPlots(data,"GVLHAVK",metric = Retention.Time,selectMean = 3, selectSD = 1)
head(data)
MSstatsQC::XmRPlots(data,"GVLHAVK",metric = "Retention.Time",selectMean = 3, selectSD = 1)
MSstatsQC::XmRPlots(data,"GVLHAVK",metric = "Retention.Time",selectMean = NULL, selectSD = NULL)
library(MSstatsQC)
library(MSstatsQC)
head(data)
MSstatsQC::CUSUMPlots(data, peptide = "GVLHAVK", metric = "Retention.Time")
MSstatsQC::CUSUMPlots(data, peptide = "GVLHAVK", metric = "Retention.Time", selectMean = 4, selectSD = 1)
library(MSstatsQC)
MSstatsQC::ChangePointEstimator(data, peptide = "GVLHAVK", metric = "Retention.Time")
MSstatsQC::ChangePointEstimator(data, peptide = "GVLHAVK", metric = "Retention.Time", selectMean = 2, selectSD = 1)
a <- list("retention" = 3, "peak" = 4)
a[["retention"]]
listMean = list("retention.time" = 2)
listMean
listMean[["retention.time"]]
listMean = list("retention.time" = 2,"t"=9)
listMean[["t"]]
library(MSstatsQC)
View(data)
MSstatsQC::XmRPlots(data,"GVLHAVK",metric = "Retention.Time")
MSstatsQC::XmRPlots(data,"GVLHAVK",metric = "Retention.Time",selectMean = 1,selectSD = 1)
MSstatsQC::CUSUMPlots(data,"GVLHAVK",metric = "Retention.Time")
MSstatsQC::CUSUMPlots(data,"GVLHAVK",metric = "Retention.Time",selectMean = 1,selectSD = 1)
MSstatsQC::ChangePointEstimator(data,"GVLHAVK",metric = "Retention.Time")
MSstatsQC::ChangePointEstimator(data,"GVLHAVK",metric = "Retention.Time",selectMean = 1,selectSD = 1)
library(MSstatsQC)
head(data)
MSstatsQC::DecisionMaker(data,method = "CUSUM", listMean = list("Retention.Time" = 2, "Full.Width.at.Half.Maximum" = 1, "Total.Peak.Area" = 1.2))
MSstatsQC::DecisionMaker(data,method = "CUSUM", listMean = list("Retention.Time" = 2, "Full.Width.at.Half.Maximum" = 1, "Total.Peak.Area" = 1.2), listSD = list("Retention.Time" = 0.5, "Full.Width.at.Half.Maximum" = 1, "Total.Peak.Area" = 0.9))
MSstatsQC::XmRPlots(data, peptide = "GVLHAVK", metric = "Retention.Time")
MSstatsQC::DecisionMaker(data,method = "CUSUM", listMean = list("Retention.Time" = 2), listSD = list("Retention.Time" = 0.5))
MSstatsQC::DecisionMaker(data,method = "CUSUM", listMean = list("Retention.Time" = 2), listSD = list("Retention.Time" = 0.5))
MSstatsQC::DecisionMaker(data,method = "CUSUM", listMean = 1, listSD = 0.5)
head(data)
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = list("Retention.Time" = 1, "Total.Peak.Area"=1.1), listSD = list("Retention.Time" = 1.1, "Total.Peak.Area"=-1.1))
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = 2, listSD = 1)
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = list("Retention.Time" = 1, "Total.Peak.Area"=1.1), listSD = list("Retention.Time" = 1.1, "Total.Peak.Area"=-1.1))
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = 2, listSD = 1)
library(MSstatsQC)
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = list("Retention.Time" = 1, "Total.Peak.Area"=1.1), listSD = list("Retention.Time" = 1.1, "Total.Peak.Area"=-1.1))
library(MSstatsQC)
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = list("Retention.Time" = 1, "Total.Peak.Area"=1.1), listSD = list("Retention.Time" = 1.1, "Total.Peak.Area"=-1.1))
library(MSstatsQC)
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = list("Retention.Time" = 1, "Total.Peak.Area"=1.1), listSD = list("Retention.Time" = 1.1, "Total.Peak.Area"=-1.1))
library(MSstatsQC)
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = list("Retention.Time" = 1, "Total.Peak.Area"=1.1), listSD = list("Retention.Time" = 1.1, "Total.Peak.Area"=-1.1))
library(MSstatsQC)
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = list("Retention.Time" = 1, "Total.Peak.Area"=1.1), listSD = list("Retention.Time" = 1.1, "Total.Peak.Area"=-1.1))
MSstatsQC::DecisionMaker(data, method = "CUSUM",listMean = NULL, listSD = NULL)
L <- NULL
L[["T"]]
View(data)
MSstatsQC::XmRPlots(data,"GVLHAVK",metric = "Retention.Time")
MSstatsQC::XmRPlots(data,"GVLHAVK",metric = "Retention.Time",selectMean = 2, selectSD = 1)
MSstatsQC::ChangePointEstimator(data,"GVLHAVK",metric = "Retention.Time")
MSstatsQC::ChangePointEstimator(data,"GVLHAVK",metric = "Retention.Time",selectMean = 2, selectSD = 1)
MSstatsQC::CUSUMPlots(data,"GVLHAVK",metric = "Retention.Time")
MSstatsQC::CUSUMPlots(data,"GVLHAVK",1,5,metric = "Retention.Time")
library(MSstatsQC)
MSstatsQC::CUSUMPlots(data,"GVLHAVK",1,5,metric = "Retention.Time")
MSstatsQC::CUSUMPlots(data,"GVLHAVK",1,5,metric = "Retention.Time",selectMean = 2, selectSD = 1)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
L <- NULL
S <- L[["t"]]
S
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
data <- read.csv("/Users/sarataheri/Dropbox/MSstatsQC/Data/Sampledata.csv")
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::DecisionMaker(data,"CUSUM")
head(atan())
head(data)
library(MSstatsQC)
data <- DataProcess(data)
MSstatsQC::DecisionMaker(data,"CUSUM")
View(data)
MSstatsQC::DecisionMaker(data,"CUSUM",listMean = list("Retention.Time" = 2, "Total.Peak.Area" = 2..2), listSD = list("Retention.Time" = 1, "Total.Peak.Area" = 1..2))
MSstatsQC::DecisionMaker(data,"CUSUM",listMean = list("Retention.Time" = 2, "Total.Peak.Area" = 2.2), listSD = list("Retention.Time" = 1, "Total.Peak.Area" = 1.2))
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data,listMean = list("Retention.Time" = 2, "Total.Peak.Area" = 2.2), listSD = list("Retention.Time" = 1, "Total.Peak.Area" = 1.2))
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
data <- read.csv("/Users/sarataheri/Dropbox/msstatsqc/Data/Sampledata.csv")
data <- DataProcess(data)
MSstatsQC::XmRSummaryPlots(data)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
data <- DataProcess(data)
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::CUSUMSummaryPlots(data)
data <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Sampledata_CPTAC_Study_9_1_Site54.csv")
data <- MSstatsQC::DataProcess(data)
MSstatsQC::XmRSummaryPlots(data)
data1 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Study9.1-Site56A.csv")
data1 <- MSstatsQC::DataProcess(data1)
MSstatsQC::XmRSummaryPlots(data1)
data2 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Study9.1-Site86.csv")
data2 <- MSstatsQC::DataProcess(data2)
MSstatsQC::XmRSummaryPlots(data2)
data3 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/fakedata.csv")
data3 <- MSstatsQC::DataProcess(data3)
MSstatsQC::XmRSummaryPlots(data3)
View(data3)
MSstatsQC::CUSUMPlots(data,"VLVLDTDYK",metric = "metric1")
head(data3)
MSstatsQC::CUSUMPlots(data,"VLVLDTDYK",metric = "Peak Assymetry")
summary(data3)
library(MSstatsQC)
MSstatsQC::CUSUMPlots(data,"VLVLDTDYK",metric = "Peak Assymetry")
library(MSstatsQC)
MSstatsQC::CUSUMPlots(data,"VLVLDTDYK",metric = "Peak Assymetry")
View(data1)
View(data1)
MSstatsQC::CUSUMPlots(data1,"VLVLDTDYK",metric = "Peak Assymetry")
MSstatsQC::CUSUMPlots(data2,"VLVLDTDYK",metric = "Peak Assymetry")
MSstatsQC::CUSUMPlots(data,"VLVLDTDYK",metric = "Peak Assymetry")
MSstatsQC::CUSUMPlots(data3,"VLVLDTDYK",metric = "Peak Assymetry")
View(data3)
View(data)
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "Peak Assymetry")
View(data1)
MSstatsQC::CUSUMPlots(data1,"VLVLDTDYK",metric = "Peak Assymetry")
View(data2)
MSstatsQC::CUSUMPlots(data1,"VLVLDTDYK",metric = "Peak Assymetry")
View(data2)
MSstatsQC::CUSUMPlots(data2,"VLVLDTDYK",metric = "Peak Assymetry")
View(data3)
MSstatsQC::CUSUMPlots(data3,"VLVLDTDYK",metric = "Peak Assymetry")
MSstatsQC::XmRSummaryPlots(data)
library(MSstatsQC)
MSstatsQC::XmRSummaryPlots(data)
MSstatsQC::XmRSummaryPlots(data1)
MSstatsQC::XmRSummaryPlots(data2)
MSstatsQC::XmRSummaryPlots(data3)
MSstatsQC::CUSUMSummaryPlots(data)
MSstatsQC::CUSUMSummaryPlots(data1)
MSstatsQC::CUSUMSummaryPlots(data2)
MSstatsQC::CUSUMSummaryPlots(data3)
View(data)
MSstatsQC::CUSUMSummaryPlots(data, listMean = list("Best.RT" = 3, "MaxFWHM" = 2, "TotalArea" = 1.5, "Peak Assymetry" = 2.2))
View(data)
View(data1)
View(data)
MSstatsQC::CUSUMSummaryPlots(data1, listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5, "Peak Assymetry" = 2.2))
View(data2)
MSstatsQC::CUSUMSummaryPlots(data2, listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5, "Peak Assymetry" = 2.2))
MSstatsQC::CUSUMSummaryPlots(data2, listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5))
MSstatsQC::CUSUMSummaryPlots(data2, listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "Max.FWHM" = 1.5, "Total.Area" = 1, "Peak Assymetry" = 1.3))
View(data1)
MSstatsQC::CUSUMSummaryPlots(data1, listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "Max.FWHM" = 1.5, "Total.Area" = 1, "Peak Assymetry" = 1.3))
View(data)
MSstatsQC::CUSUMSummaryPlots(data, listMean = list("Best.RT" = 3, "MaxFWHM" = 2, "TotalArea" = 1.5, "Peak Assymetry" = 2.2),listSD = list("BestRT" = 1.1, "MaxFWHM" = 1.5, "TotalArea" = 1, "Peak Assymetry" = 1.3))
MSstatsQC::CUSUMSummaryPlots(data, listMean = list("Best.RT" = 3, "MaxFWHM" = 2, "TotalArea" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "MaxFWHM" = 1.5, "TotalArea" = 1, "Peak Assymetry" = 1.3))
MSstatsQC::XmRSummaryPlots(data, listMean = list("Best.RT" = 3, "MaxFWHM" = 2, "TotalArea" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "MaxFWHM" = 1.5, "TotalArea" = 1, "Peak Assymetry" = 1.3))
View(data1)
MSstatsQC::XmRSummaryPlots(data1, listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "Max.FWHM" = 1.5, "Total.Area" = 1, "Peak Assymetry" = 1.3))
View(data2)
MSstatsQC::XmRSummaryPlots(data2, listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "Max.FWHM" = 1.5, "Total.Area" = 1, "Peak Assymetry" = 1.3))
View(data)
MSstatsQC::CUSUMPlots(data, peptide = "TAAYVNAIEK",metric = "Best.RT", selectMean = 2, selectSD = 1)
View(data1)
MSstatsQC::CUSUMPlots(data1, peptide = "VLVLDTDYK",metric = "Best.RT", selectMean = 2, selectSD = 1)
View(data2)
MSstatsQC::CUSUMPlots(data2, peptide = "VLVLDTDYK",metric = "Best.RT", selectMean = 2, selectSD = 1)
MSstatsQC::DecisionMaker(data, method = "XmR")
MSstatsQC::DecisionMaker(data1, method = "XmR")
MSstatsQC::DecisionMaker(data2, method = "XmR")
MSstatsQC::DecisionMaker(data3, method = "XmR")
MSstatsQC::DecisionMaker(data1, method = "XmR",listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "Max.FWHM" = 1.5, "Total.Area" = 1, "Peak Assymetry" = 1.3))
MSstatsQC::DecisionMaker(data2, method = "XmR",listMean = list("Best.RT" = 3, "Max.FWHM" = 2, "Total.Area" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "Max.FWHM" = 1.5, "Total.Area" = 1, "Peak Assymetry" = 1.3))
MSstatsQC::DecisionMaker(data, method = "XmR",listMean = list("Best.RT" = 3, "MaxFWHM" = 2, "TotalArea" = 1.5, "Peak Assymetry" = 2.2),listSD = list("Best.RT" = 1.1, "MaxFWHM" = 1.5, "TotalArea" = 1, "Peak Assymetry" = 1.3))
MSstatsQC::ChangePointEstimator(data2, peptide = "VLVLDTDYK",metric = "Best.RT", selectMean = 2, selectSD = 1)
MSstatsQC::ChangePointEstimator(data1, peptide = "VLVLDTDYK",metric = "Best.RT", selectMean = 2, selectSD = 1)
MSstatsQC::ChangePointEstimator(data, peptide = "TAAYVNAIEK",metric = "Best.RT", selectMean = 2, selectSD = 1)
MSstatsQC::ChangePointEstimator(data, peptide = "TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::ChangePointEstimator(data1, peptide = "VLVLDTDYK",metric = "Best.RT")
MSstatsQC::ChangePointEstimator(data2, peptide = "VLVLDTDYK",metric = "Best.RT")
MSstatsQC::XmRPlots(data2, peptide = "VLVLDTDYK",metric = "Best.RT", selectMean = 2, selectSD = 1)
MSstatsQC::XmRPlots(data1, peptide = "VLVLDTDYK",metric = "Best.RT", selectMean = 2, selectSD = 1)
MSstatsQC::XmRPlots(data, peptide = "TAAYVNAIEK",metric = "Best.RT", selectMean = 2, selectSD = 1)
data3 <- MSstatsQC::DataProcess(data3)
?MSstatsQC::XmRSummaryPlots
library(MSstatsQC)
MSstatsQC::XmR.Radar.Plot(data,1,5,NULL,NULL)
library(MSstatsQC)
MSstatsQC::XmR.Radar.Plot(data)
MSstatsQC::XmR.Radar.Plot(data1)
MSstatsQC::XmR.Radar.Plot(data2)
MSstatsQC::CUSUM.Radar.Plot(data)
MSstatsQC::CUSUM.Radar.Plot(data1)
MSstatsQC::CUSUM.Radar.Plot(data2)
library(MSstatsQC)
?CUSUM.Radar.Plot
library(MSstatsQC)
library(MSstatsQC)
library(MSstatsQC)
View(data)
MSstatsQC::XmRPlots(data,"TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::XmRPlots(data,"TAAYVNAIEK",metric = "Best.RT")
library(MSstatsQC)
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "Best.RT")
MSstatsQC::CUSUMPlots(data,"TAAYVNAIEK",metric = "Best.RT",selectMean = 18.806, selectSD = 0.0250998)
library(MSstatsQC)
RunShiny()
MSstatsQC::RunShiny()
MSstatsQC::RunShiny()
library(MSstatsQC)
MSstatsQC::RunShiny()
library(MSstatsQC)
MSstatsQC::RunShiny()
library(MSstatsQC)
data2 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Study9.1-Site86.csv")
MSstatsQC::RunShiny(data2)
?runApp
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
MSstatsQC::RunShiny(data2)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(NULL)
library(MSstatsQC)
MSstatsQC::RunShiny(NULL)
?system.file
library(MSstatsQC)
MSstatsQC::RunShiny(NULL)
library(MSstatsQC)
MSstatsQC::RunShiny(NULL)
library(MSstatsQC)
MSstatsQC::RunShiny(NULL)
library(MSstatsQC)
MSstatsQC::RunShiny(NULL)
library(MSstatsQC)
data2 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Study9.1-Site86.csv")
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
data2 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Study9.1-Site86.csv")
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
data2 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Study9.1-Site86.csv")
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
runApp('GitHub/msstats-qc')
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
runApp('GitHub/msstats-qc')
library(MSstatsQC)
data2 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Study9.1-Site86.csv")
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
runApp('GitHub/msstats-qc')
runApp('GitHub/msstats-qc')
library(MSstatsQC)
data2 <- read.csv("/Users/sarataheri/GitHub/msstats-qc/Datasets/Study9.1-Site86.csv")
MSstatsQC::RunShiny(data2)
runApp('GitHub/msstats-qc')
MSstatsQC::RunShiny(data2)
MSstatsQC::RunShiny(data2)
library(MSstatsQC)
MSstatsQC::RunShiny(data2)
